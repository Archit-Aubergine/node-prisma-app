// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                Int        @id @default(autoincrement())
  name              String     @db.VarChar(30)
  email             String     @unique
  password          String
  avatarPublicId    String
  avatarUrl         String
  role              Role @default(USER)
  createdAt         DateTime   @default(now())
  resetPasswordToken String?
  resetPasswordExpire DateTime?
  orders            Order[]
  reviews Review[]
  productsCreated Product[]
  shippingInfo ShippingInfo?
}

model Order {
  id          Int         @id @default(autoincrement())
  orderItems  OrderItem[]
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  orderStatus String      @default("Processing")
  totalPrice  Float
  itemsPrice  Float       @default(0)
  taxPrice    Float       @default(0)
  paymentStatus String
  transactionId String?
  paidAt      DateTime
  shippingPrice Float     @default(0)
  deliveredAt DateTime?
  createdAt   DateTime    @default(now())
}

model ShippingInfo {
  id        Int    @id @default(autoincrement())
  address   String
  city      String
  state     String
  country   String
  pinCode   Int
  phoneNo   Int
  userId Int @unique
  user     User  @relation(fields: [userId], references: [id])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  name      String
  price     Float
  quantity  Int
  image     String
  productId Int
  product   Product @relation(fields: [productId], references: [id]) 
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  rating      Float   @default(0)
  images      ProductImage[]
  category    String
  stock       Int      @default(1)
  numOfReviews Int    @default(0)
  reviews     Review[]
  orderItems   OrderItem[]  
  createdById Int
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdDate DateTime @default(now())
}

model ProductImage {
  id        Int    @id @default(autoincrement())
  publicId  String
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        Int    @id @default(autoincrement())
  name      String
  rating    Int
  comment   String?
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  commentedById Int
  commentedBy User @relation(fields: [commentedById], references: [id])
}

